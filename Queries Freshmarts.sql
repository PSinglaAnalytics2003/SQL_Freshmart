
--CUSTOMERS--
select * from Customer

--Find the total number of customers --

select count (Customer_ID) as Total_Customers
from Customer


-- Find the oldest and youngest customers--

select FirstName, LastName, Age,
CASE
	When Age <= 30 then 'Young'
	else 'Old'
END as Label
from Customer
order by Age asc

-- count the age group 0-10, 10-20, 20-30, 30-50, 50 or above
select label, count(label) 
from
(
select *,
	Case
		when age between 0 and 10 then '0-10'
		when age between 10 and 20 then '10-20'
		when age between 20 and 30 then '20-30'
		when age between 30 and 40 then '30-40'
		else '50 or above'
		end as label
from Customer) as Age
group by label



-- How many male and female customers are there--

select  Gender, count(Gender) as CountGender
from Customer
group by  Gender
order by CountGender


--Find the Customer with the most recent purchase--

Select Top 1 C.Customer_ID, Order_id, FirstName, LastName, Order_date
from Customer C
 Join Orderss O
	ON C.Customer_ID = O.Customer_id
order by Order_date desc


--Show the top 5 customers who placed the most orders--

select  top 5 O.Customer_id,C.FirstName, C.LastName, count(O.Order_ID) as Count_Orders
from Orderss O
Join Customer C
	ON C.Customer_ID = O.Customer_id
Group by O.Customer_id, C.FirstName, C.LastName
Order by  Count_Orders desc

--ORDERS--

-- the total number of orders placed excluding null values --
 select count(order_id) as Total_orders
 from Orderss
 where amount_paid is not null


 --show  number of orders of each year where status is completed--
 select  year(order_date) as order_year,  count(Order_id) as total_orders
 from orderss
 where status = 'Completed' 
 group by  year(order_date)


 --Find the total amount_paid by each customer--
 SELECT  Customer_id, SUM(amount_paid) AS TotalAmountPaid
FROM Orderss
GROUP BY Customer_id
order by TotalAmountPaid desc

--Find the average amount paid by each status--

select status, round(avg(amount_paid ),0) as avg_AmountPaid
from Orderss
group by Status


--ORDERDETAILS--
SELECT * FROM OrderDetails

--Find all the products where products subtotal is greater than the average of total--

select product_id, Subtotal
from OrderDetails 
where Subtotal > 
				(select avg(Subtotal) 
                  from OrderDetails)
order by Subtotal desc


--Find the top 3 orders with highest quantity--
select top 3 order_id, sum(quantity) as sum_quantity
from Orderdetails
group by order_id
order by sum(quantity) desc


--Find the Products with the highest quantity ordered in 2022--

select p.product_id, p.product_name, o.order_date, sum (d.quantity) as total_quantity
from Orderss o
Join Orderdetails d
	ON o.Order_id = d.Order_id
Join products p
	ON p.Product_id = d.Product_id
where o.order_date like '2022%'
group by p.product_id, p.product_name, o.order_date
order by total_quantity desc


--total revenue generated by each product--

select d.product_id, product_name, sum (Subtotal) revenue
from OrderDetails d
inner join products p
	ON d.Product_id = p.Product_id
group by d.product_id, product_name
order by revenue desc

--CATEGORY--
SELECT * FROM categories

--order the products based on their categories--

select c.category_id, p.Product_id, p.Product_name, c.category_name
from categories c
join products p
	on c.category_id = p.category_id
order by category_name desc

-- categorize the products purchased from highest to lowest--

select  c.category_id, c.category_name, count(d.product_id)as total_products
from categories c
join products p
	on c.category_id = p.category_id
	join OrderDetails d
	on d.Product_id = p.Product_id
group by  c.category_id, c.category_name
order by total_products desc


--count the products based on each category--

select  p.Product_id, c.category_id, p.Product_name, c.category_name, 
	count(p.Product_id) over (partition by c.category_id) as count_products
from categories c
join products p
	on c.category_id = p.category_id
order by count_products desc



--PRODUCT--
select * from products

--average price of all products--

select  round(avg(Price),2) as avg_price
from products

--find the most expensive product with its category--
select top 1 p.Product_name,  c.category_name, p.Price
from products p
join categories c
	ON p.category_id = c.category_id
order by Price desc


--Total value of products in each category--
SELECT category_id, SUM(Price) AS TotalValue
FROM products
GROUP BY category_id
order by TotalValue desc;

--Find the products which are not in Orders--
select Product_id, Product_name
from products
where Product_id not in (select Product_id from OrderDetails)
order by Product_id

--Total revenue generated by each product--
SELECT p.Product_id, p.Product_name, sum(d.Quantity * p.Price) AS Totalrevenue
FROM OrderDetails d
JOIN products p
ON d.Product_id = p.Product_id
GROUP BY p.Product_id, Product_name

--PAYMENT--
select * from payment

--Find the most widely used payment method --
select payment_method, count(payment_method) as count_method
from payment
group by payment_method
order by count_method desc

--Final amount after including the 5% tax --
select *, 
	(total_amount + tax_5percent) as Final_amount
from payment
where total_amount is not null

--Find the payment with highest tax amount paid by whom --
select top 1 pa.payment_id, c.Customer_ID, c.FirstName, c.LastName, pa.total_amount, pa.tax_5percent
from payment pa
join Customer c
on pa.Customer_id = c.Customer_ID
order by pa.tax_5percent desc

--which year has the most payments--
select year(payment_date) as year_payment, count (payment_date) as Total_number
from payment
group by year(payment_date)


